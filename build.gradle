apply plugin: 'groovy'
apply plugin: 'idea'



buildscript {
    configurations.all {
        // check for updates every build
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    repositories {
        mavenLocal()
        maven {
            url "http://localhost:8081/nexus/content/groups/public/"
        }
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.gradle.api.plugins:gradle-nexus-plugin:0.4'
    }
}

apply plugin: 'nexus'

group='com.github.signed.gradle.plugin'
version='0.0.1-SNAPSHOT'
sourceCompatibility = 1.7
targetCompatibility = 1.7

dependencies {
    compile(
            ['org.hamcrest:hamcrest-generator:1.3']
          , ['com.google.code.javaparser:javaparser:1.0.8']
          , ['com.google.guava:guava:15.0']
          , ['commons-io:commons-io:2.3']
    )
    testCompile(
            ['org.hamcrest:hamcrest-core:1.3.RC2']
          , ['org.hamcrest:hamcrest-library:1.3.RC2']
          , ['org.spockframework:spock-core:0.6-groovy-1.8']
          , ['junit:junit:4.11']
          , ['org.mockito:mockito-core:1.9.0-rc1']
          , ['com.sun.codemodel:codemodel:2.6']
    )
    compile gradleApi()
    compile localGroovy()
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.9'
}

modifyPom {
    project {
        name 'Gradle Hamcrest plugin'
        description 'Gradle plugin that generates a central class to access your custom matchers.'
        url 'https://github.com/signed/gradle-hamcrest-plugin'
        inceptionYear '2012'

        scm {
            url 'https://github.com/signed/gradle-hamcrest-plugin'
            connection 'scm:https://github.com/signed/gradle-hamcrest-plugin.git'
            developerConnection 'scm:git@github.com:signed/gradle-hamcrest-plugin.git'
        }

        licenses {
            license {
                name 'The Apache Software License, Version 2.0'
                url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                distribution 'repo'
            }
        }

        developers {
            developer {
                id 'thomasheilbronner'
                name 'Thomas Heilbronner'
            }
        }
    }
}

def environments = [
        'local': [
                repositoryLogin: deploymentNexusLocalLogin,
                repositoryPassword: deploymentNexusLocalPassword,
                'urls': [
                        'snapshot': 'http://localhost:8081/nexus/content/repositories/snapshots',
                        'release' : 'http://localhost:8081/nexus/content/repositories/releases'

                ]
        ],
        'sonatype': [
                repositoryLogin: deploymentSonatypeLogin,
                repositoryPassword: deploymentSonatypePassword,
                'urls': [
                        'snapshot': 'https://oss.sonatype.org/content/repositories/snapshots',
                        'release' : 'https://oss.sonatype.org/service/local/staging/deploy/maven2'
                ]
        ]
]

def intent = hasProperty('release') ? 'release' : 'snapshot'
def target = hasProperty('sonatype') ? 'sonatype' : 'local'
println "intent: $intent target: $target url: ${environments.get(target).urls.get(intent)}"

def environment = environments.get(target)
if (project.hasProperty('release')) {
    project.version -= '-SNAPSHOT'
}

ext.nexusUsername = environment.repositoryLogin
ext.nexusPassword = environment.repositoryPassword

nexus {
    sign = true
    repositoryUrl = environment.urls.release
    snapshotRepositoryUrl = environment.urls.snapshot
}
